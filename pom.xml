<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.haesleinhuepf</groupId>
		<artifactId>clij-parent-pom</artifactId>
		<version>2.2.0.14</version>
		<relativePath />
	</parent>

	<groupId>net.clesperanto</groupId>
	<artifactId>clesperantoj_</artifactId>
	<version>0.0.0.1</version>

	<name>clesperantoj_</name>
	<description>clesperantoj</description>
	<url>http://haesleinhuepf.net</url>
	<inceptionYear>2022</inceptionYear>
	<organization>
    <name>PoL, TU Dresden</name>
		<url>http://www.tu-dresden.de</url>
	</organization>
	<licenses>
		<license>
			<name>Simplified BSD License</name>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>haesleinhuepf</id>
			<name>Robert Haase`</name>
			<url>http://haesleinhuepf.net</url>
			<organization>PoL TUD</organization>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

  	<mailingLists>
		<mailingList>
			<name>ImageSc Forum</name>
			<archive>http://forum.image.sc/</archive>
		</mailingList>
	</mailingLists>

	<properties>
		<package-name>net.haesleinhuepf</package-name>
		<license.licenseName>bsd_3</license.licenseName>
		<license.copyrightOwners>Robert Haase, MPI CBG</license.copyrightOwners>
		<scijava.app.directory>/home/stephane/Documents/Fiji.app/</scijava.app.directory>
		<!-- <scijava.app.directory>/PATH/TO/YOUR/FIJI/Fiji.app/</scijava.app.directory> -->
	</properties>

    <dependencies>
        <!-- ImageJ dependencies -->
		<dependency>
			<groupId>net.imagej</groupId>
			<artifactId>imagej</artifactId>
		</dependency>
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
        <!-- JavaCPP dependencies -->
        <dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
			<version>1.5</version>
		</dependency>
    </dependencies>

    <repositories>
		<repository>
			<id>scijava.public</id>
			<url>https://maven.scijava.org/content/groups/public</url>
		</repository>
	</repositories>

    <build>

		<!-- add gen source directory which will contain the java wrapper code generated by the javacpp parser  -->
		<plugins>

        <!-- Execute cppbuild.sh to build cleperantoj a wrapper to clesperato.hpp -->
		<plugin>
			<artifactId>exec-maven-plugin</artifactId>
			<version>1.6.0</version>
			<groupId>org.codehaus.mojo</groupId>
			<executions>
				<execution>
					<id>cppbuild</id>
					<phase>generate-sources</phase>
					<goals>
						<goal>exec</goal>
					</goals>
					<configuration>
						<executable>bash</executable>
						<commandlineArgs>${project.basedir}/native/cppbuild.sh</commandlineArgs>
						<workingDirectory>${project.basedir}/native</workingDirectory>
					</configuration>
				</execution>
			</executions>
		</plugin>

        <plugin>
       		<groupId>org.codehaus.mojo</groupId>
       		<artifactId>build-helper-maven-plugin</artifactId>
       		<version>3.3.0</version>
       		<executions>
                <execution>
           			<id>add-source</id>
           			<phase>generate-sources</phase>
           			<goals>
             				<goal>add-source</goal>
           			</goals>
                    <configuration>
                        <sources>
                            <source>${project.basedir}/src/gen/java</source>
                            <!--  Not sure if below is needed.  TODO:  Erase and confirm build still works -->
                            <source>${project.basedir}/cppbuild/${javacpp.platform}${javacpp.platform.extension}/java/</source>
                        </sources>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.4.1</version>
			<configuration>
				<argLine>-Xmx2G</argLine>
			</configuration>
		</plugin>

        <plugin>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
			<version>1.5</version>
			<configuration>
				<classPath>${project.build.outputDirectory}</classPath>
				<includePaths>
					<includePath>${project.build.sourceDirectory}</includePath>
					<includePath>${basedir}/native/clesperantoj/include</includePath>
					<!-- add all necessary include paths here for CLIc -->
					<includePath>${basedir}/native/clesperantoj/cppbuild/_deps/clic_lib-build/clic/include</includePath>
					<includePath>${basedir}/lib/linux64/include/CLIc</includePath>
					<includePath>${basedir}/lib/win64/include/CLIc</includePath>
					<!-- <includePath>${basedir}/../CLIc_prototype/thirdparty/opencl/ocl-clhpp/include/</includePath>-->
				</includePaths>
				<linkPaths>
					<linkPath>${basedir}/lib/win64/</linkPath>
					<linkPath>${basedir}/lib/linux64/</linkPath>
					<linkPath>${basedir}/lib/macosx/</linkPath>
					<!-- <linkPath>${basedir}/native/lib/</linkPath> -->
					<!-- <linkPath>${basedir}/../CLIc_prototype/bin/lib</linkPath> -->
                    <linkPath>${basedir}/lib/win64/lib</linkPath>
					<linkPath>${basedir}/lib/linux64/lib</linkPath>
					<linkPath>${basedir}/lib/macosx/lib</linkPath>
				</linkPaths>
				<copyLibs>true</copyLibs>
			</configuration>

			<executions>

				<!--  1. Parse the c++ header files specified in java files to generate java wrapper classes -->
			  	<execution>
					<id>generate-sources</id>
					<phase>generate-sources</phase>
					<goals>
						<goal>parse</goal>
					</goals>
					<configuration>
						<outputDirectory>${project.basedir}/src/gen/java</outputDirectory>
						<classOrPackageNames>
							<classOrPackageName>net.clesperanto.clicwrapper.clesperantoj</classOrPackageName>
							<!-- <classOrPackageName>net.clesperanto.clicwrapper.clesperanto</classOrPackageName> -->
						</classOrPackageNames>
					</configuration>
				</execution>

                <!--  2. Process classes generated in step 1 to create c++ wrapper library -->
			  	<execution>
					<id>process-classes</id>
					<phase>process-classes</phase>
					<goals>
						<goal>build</goal>
					</goals>
					<configuration>
						<classOrPackageNames>
							<!-- <classOrPackageName>net.clesperanto.clicwrapper.clesperantoWrapper</classOrPackageName> -->
							<classOrPackageName>net.clesperanto.clicwrapper.clesperantojWrapper</classOrPackageName>
						</classOrPackageNames>
					</configuration>
				</execution>

            </executions>
		</plugin>

        </plugins>
	</build>

</project>
